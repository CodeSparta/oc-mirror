name: Deploy Utility to Quay

on:

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v3

  #  - name: Configure AWS credentials
  #    uses: aws-actions/configure-aws-credentials@v1
  #    with:
  #      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #      aws-region: us-gov-west-1

#    - name: Login to Amazon ECR
#      id: login-ecr
#      uses: aws-actions/amazon-ecr-login@v1

#    - name: Build, tag, and push image to Amazon ECR
#      env:
#        ECR_REGISTRY: ${{ secrets.ECR_URI }}
#        ECR_REPOSITORY: codesparta
#        IMAGE_TAG: utility_image
#      run: |
#        docker build --file ./containers/utility/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Login Quay.io
      uses: docker/login-action@v1.14.1
      with:
        logout: true
        registry: quay.io
        username: ${{ secrets.QUAY_USER }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Build utility Image
      id: push-to-quay
      uses: docker/build-push-action@v2
      with:
        context: ./containers/utility/Dockerfile
        platforms: linux/amd64
        pull: true
        push: true
        tags: |
          quay.io/sparta/utility_image:latest

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - build
    if: ${{ always() }} # You always want to be notified: success, failure, or cancelled

    steps:

    - name: Notify
      uses: nobrayner/discord-webhook@v1
      with:
        github-token: ${{ secrets.NOTIFICATION_TOKEN }}
        discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
